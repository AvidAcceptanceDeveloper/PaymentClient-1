//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RDSSNLSMPUtilsClasses.com.cyberridge.ws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://nortridge.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NLSAuthenticateByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGlobalAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetLoanListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetLoanDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetLoanCreditLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSStatementImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSStatementImageBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSLoanPendingTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSLogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSVerifyContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSCreateCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSCreateCredentialsByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryByEmailByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryHintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryHintsByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSPasswordRecoveryAnswersByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSForceChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetContactTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetContactTaskRelationshipsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSContactUDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSLoanDetailUDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSLoanPaymentsDueOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSLoanPaymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSStatementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetLoanStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVendorAcctListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVendorAcctDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVoucherListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetStipulationListByContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetStipulationListByTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVerificationListByContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVerificationListByTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetTaskUDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSGetVoucherListByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback APROperationCompleted;
        
        private System.Threading.SendOrPostCallback APRIrregularLastPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateActualIntYearAmortizedPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback IRROperationCompleted;
        
        private System.Threading.SendOrPostCallback NPVOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback XIRROperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateAmortizedPaymentAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateAmortizedPaymentAmountWithBalloonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkFlowResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenewTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsWebPayActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPayURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostWebPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSDealerTrackAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNLSWebServiceVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDateHolidayOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvancePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaturityDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAmortizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback APRUsingCashFlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateLoanAmortizationScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXML2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXMLUsingDBAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXMLUsingDBAuthentication2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXMLTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportXMLTest2OperationCompleted;
        
        private System.Threading.SendOrPostCallback NLSAuthenticateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::RDSSNLSMPUtilsClasses.Properties.Settings.Default.RDDSNLSMPUtilsClasses_com_cyberridge_ws_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NLSAuthenticateByContactTypeCompletedEventHandler NLSAuthenticateByContactTypeCompleted;
        
        /// <remarks/>
        public event NLSGlobalAuthenticationCompletedEventHandler NLSGlobalAuthenticationCompleted;
        
        /// <remarks/>
        public event NLSGetLoanListCompletedEventHandler NLSGetLoanListCompleted;
        
        /// <remarks/>
        public event NLSGetLoanDetailCompletedEventHandler NLSGetLoanDetailCompleted;
        
        /// <remarks/>
        public event NLSGetLoanCreditLinesCompletedEventHandler NLSGetLoanCreditLinesCompleted;
        
        /// <remarks/>
        public event NLSGetContactCompletedEventHandler NLSGetContactCompleted;
        
        /// <remarks/>
        public event NLSStatementImageCompletedEventHandler NLSStatementImageCompleted;
        
        /// <remarks/>
        public event NLSStatementImageBase64CompletedEventHandler NLSStatementImageBase64Completed;
        
        /// <remarks/>
        public event NLSLoanPendingTransactionsCompletedEventHandler NLSLoanPendingTransactionsCompleted;
        
        /// <remarks/>
        public event NLSLogOutCompletedEventHandler NLSLogOutCompleted;
        
        /// <remarks/>
        public event NLSVerifyContactCompletedEventHandler NLSVerifyContactCompleted;
        
        /// <remarks/>
        public event NLSCreateCredentialsCompletedEventHandler NLSCreateCredentialsCompleted;
        
        /// <remarks/>
        public event NLSCreateCredentialsByContactTypeCompletedEventHandler NLSCreateCredentialsByContactTypeCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryByEmailCompletedEventHandler NLSPasswordRecoveryByEmailCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryByEmailByContactTypeCompletedEventHandler NLSPasswordRecoveryByEmailByContactTypeCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryHintsCompletedEventHandler NLSPasswordRecoveryHintsCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryHintsByContactTypeCompletedEventHandler NLSPasswordRecoveryHintsByContactTypeCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryAnswersCompletedEventHandler NLSPasswordRecoveryAnswersCompleted;
        
        /// <remarks/>
        public event NLSPasswordRecoveryAnswersByContactTypeCompletedEventHandler NLSPasswordRecoveryAnswersByContactTypeCompleted;
        
        /// <remarks/>
        public event NLSChangePasswordCompletedEventHandler NLSChangePasswordCompleted;
        
        /// <remarks/>
        public event NLSForceChangePasswordCompletedEventHandler NLSForceChangePasswordCompleted;
        
        /// <remarks/>
        public event NLSGetContactTaskListCompletedEventHandler NLSGetContactTaskListCompleted;
        
        /// <remarks/>
        public event NLSGetContactTaskRelationshipsListCompletedEventHandler NLSGetContactTaskRelationshipsListCompleted;
        
        /// <remarks/>
        public event NLSGetTaskDetailCompletedEventHandler NLSGetTaskDetailCompleted;
        
        /// <remarks/>
        public event NLSContactUDFCompletedEventHandler NLSContactUDFCompleted;
        
        /// <remarks/>
        public event NLSLoanDetailUDFCompletedEventHandler NLSLoanDetailUDFCompleted;
        
        /// <remarks/>
        public event NLSLoanPaymentsDueCompletedEventHandler NLSLoanPaymentsDueCompleted;
        
        /// <remarks/>
        public event NLSLoanPaymentHistoryCompletedEventHandler NLSLoanPaymentHistoryCompleted;
        
        /// <remarks/>
        public event NLSStatementsCompletedEventHandler NLSStatementsCompleted;
        
        /// <remarks/>
        public event NLSGetLoanStatusesCompletedEventHandler NLSGetLoanStatusesCompleted;
        
        /// <remarks/>
        public event NLSGetVendorAcctListCompletedEventHandler NLSGetVendorAcctListCompleted;
        
        /// <remarks/>
        public event NLSGetVendorAcctDetailCompletedEventHandler NLSGetVendorAcctDetailCompleted;
        
        /// <remarks/>
        public event NLSGetVoucherListCompletedEventHandler NLSGetVoucherListCompleted;
        
        /// <remarks/>
        public event NLSGetStipulationListByContactCompletedEventHandler NLSGetStipulationListByContactCompleted;
        
        /// <remarks/>
        public event NLSGetStipulationListByTaskCompletedEventHandler NLSGetStipulationListByTaskCompleted;
        
        /// <remarks/>
        public event NLSGetVerificationListByContactCompletedEventHandler NLSGetVerificationListByContactCompleted;
        
        /// <remarks/>
        public event NLSGetVerificationListByTaskCompletedEventHandler NLSGetVerificationListByTaskCompleted;
        
        /// <remarks/>
        public event NLSGetTaskUDFCompletedEventHandler NLSGetTaskUDFCompleted;
        
        /// <remarks/>
        public event NLSGetVoucherListByStatusCompletedEventHandler NLSGetVoucherListByStatusCompleted;
        
        /// <remarks/>
        public event APRCompletedEventHandler APRCompleted;
        
        /// <remarks/>
        public event APRIrregularLastPaymentCompletedEventHandler APRIrregularLastPaymentCompleted;
        
        /// <remarks/>
        public event CalculateActualIntYearAmortizedPaymentCompletedEventHandler CalculateActualIntYearAmortizedPaymentCompleted;
        
        /// <remarks/>
        public event IRRCompletedEventHandler IRRCompleted;
        
        /// <remarks/>
        public event NPVCompletedEventHandler NPVCompleted;
        
        /// <remarks/>
        public event SendEmailMessageCompletedEventHandler SendEmailMessageCompleted;
        
        /// <remarks/>
        public event XIRRCompletedEventHandler XIRRCompleted;
        
        /// <remarks/>
        public event CalculateAmortizedPaymentAmountCompletedEventHandler CalculateAmortizedPaymentAmountCompleted;
        
        /// <remarks/>
        public event CalculateAmortizedPaymentAmountWithBalloonCompletedEventHandler CalculateAmortizedPaymentAmountWithBalloonCompleted;
        
        /// <remarks/>
        public event GenerateDocumentCompletedEventHandler GenerateDocumentCompleted;
        
        /// <remarks/>
        public event SetWorkFlowResultCompletedEventHandler SetWorkFlowResultCompleted;
        
        /// <remarks/>
        public event RenewTokenCompletedEventHandler RenewTokenCompleted;
        
        /// <remarks/>
        public event IsWebPayActiveCompletedEventHandler IsWebPayActiveCompleted;
        
        /// <remarks/>
        public event GetWebPayURLCompletedEventHandler GetWebPayURLCompleted;
        
        /// <remarks/>
        public event PostWebPayCompletedEventHandler PostWebPayCompleted;
        
        /// <remarks/>
        public event NLSDealerTrackAppCompletedEventHandler NLSDealerTrackAppCompleted;
        
        /// <remarks/>
        public event GetNLSWebServiceVersionCompletedEventHandler GetNLSWebServiceVersionCompleted;
        
        /// <remarks/>
        public event IsDateHolidayCompletedEventHandler IsDateHolidayCompleted;
        
        /// <remarks/>
        public event AdvancePeriodCompletedEventHandler AdvancePeriodCompleted;
        
        /// <remarks/>
        public event GetMaturityDateCompletedEventHandler GetMaturityDateCompleted;
        
        /// <remarks/>
        public event CreateAmortizationCompletedEventHandler CreateAmortizationCompleted;
        
        /// <remarks/>
        public event APRUsingCashFlowCompletedEventHandler APRUsingCashFlowCompleted;
        
        /// <remarks/>
        public event NLSMethodCompletedEventHandler NLSMethodCompleted;
        
        /// <remarks/>
        public event CalculateLoanAmortizationScheduleCompletedEventHandler CalculateLoanAmortizationScheduleCompleted;
        
        /// <remarks/>
        public event ImportXMLCompletedEventHandler ImportXMLCompleted;
        
        /// <remarks/>
        public event ImportXML2CompletedEventHandler ImportXML2Completed;
        
        /// <remarks/>
        public event ImportXMLUsingDBAuthenticationCompletedEventHandler ImportXMLUsingDBAuthenticationCompleted;
        
        /// <remarks/>
        public event ImportXMLUsingDBAuthentication2CompletedEventHandler ImportXMLUsingDBAuthentication2Completed;
        
        /// <remarks/>
        public event ImportXMLTestCompletedEventHandler ImportXMLTestCompleted;
        
        /// <remarks/>
        public event ImportXMLTest2CompletedEventHandler ImportXMLTest2Completed;
        
        /// <remarks/>
        public event NLSAuthenticateCompletedEventHandler NLSAuthenticateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSAuthenticateByContactType", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSAuthenticateByContactType(string db_type, string server_name, string database_name, string contact_type, string username, string password, string ipaddress) {
            object[] results = this.Invoke("NLSAuthenticateByContactType", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        contact_type,
                        username,
                        password,
                        ipaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSAuthenticateByContactTypeAsync(string db_type, string server_name, string database_name, string contact_type, string username, string password, string ipaddress) {
            this.NLSAuthenticateByContactTypeAsync(db_type, server_name, database_name, contact_type, username, password, ipaddress, null);
        }
        
        /// <remarks/>
        public void NLSAuthenticateByContactTypeAsync(string db_type, string server_name, string database_name, string contact_type, string username, string password, string ipaddress, object userState) {
            if ((this.NLSAuthenticateByContactTypeOperationCompleted == null)) {
                this.NLSAuthenticateByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSAuthenticateByContactTypeOperationCompleted);
            }
            this.InvokeAsync("NLSAuthenticateByContactType", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        contact_type,
                        username,
                        password,
                        ipaddress}, this.NLSAuthenticateByContactTypeOperationCompleted, userState);
        }
        
        private void OnNLSAuthenticateByContactTypeOperationCompleted(object arg) {
            if ((this.NLSAuthenticateByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSAuthenticateByContactTypeCompleted(this, new NLSAuthenticateByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGlobalAuthentication", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGlobalAuthentication(string db_type, string server_name, string database_name) {
            object[] results = this.Invoke("NLSGlobalAuthentication", new object[] {
                        db_type,
                        server_name,
                        database_name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGlobalAuthenticationAsync(string db_type, string server_name, string database_name) {
            this.NLSGlobalAuthenticationAsync(db_type, server_name, database_name, null);
        }
        
        /// <remarks/>
        public void NLSGlobalAuthenticationAsync(string db_type, string server_name, string database_name, object userState) {
            if ((this.NLSGlobalAuthenticationOperationCompleted == null)) {
                this.NLSGlobalAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGlobalAuthenticationOperationCompleted);
            }
            this.InvokeAsync("NLSGlobalAuthentication", new object[] {
                        db_type,
                        server_name,
                        database_name}, this.NLSGlobalAuthenticationOperationCompleted, userState);
        }
        
        private void OnNLSGlobalAuthenticationOperationCompleted(object arg) {
            if ((this.NLSGlobalAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGlobalAuthenticationCompleted(this, new NLSGlobalAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetLoanList", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetLoanList(string token, string ContactNumber, bool IncludeRelatedLoans) {
            object[] results = this.Invoke("NLSGetLoanList", new object[] {
                        token,
                        ContactNumber,
                        IncludeRelatedLoans});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetLoanListAsync(string token, string ContactNumber, bool IncludeRelatedLoans) {
            this.NLSGetLoanListAsync(token, ContactNumber, IncludeRelatedLoans, null);
        }
        
        /// <remarks/>
        public void NLSGetLoanListAsync(string token, string ContactNumber, bool IncludeRelatedLoans, object userState) {
            if ((this.NLSGetLoanListOperationCompleted == null)) {
                this.NLSGetLoanListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetLoanListOperationCompleted);
            }
            this.InvokeAsync("NLSGetLoanList", new object[] {
                        token,
                        ContactNumber,
                        IncludeRelatedLoans}, this.NLSGetLoanListOperationCompleted, userState);
        }
        
        private void OnNLSGetLoanListOperationCompleted(object arg) {
            if ((this.NLSGetLoanListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetLoanListCompleted(this, new NLSGetLoanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetLoanDetail", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetLoanDetail(string token, string LoanNumber) {
            object[] results = this.Invoke("NLSGetLoanDetail", new object[] {
                        token,
                        LoanNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetLoanDetailAsync(string token, string LoanNumber) {
            this.NLSGetLoanDetailAsync(token, LoanNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetLoanDetailAsync(string token, string LoanNumber, object userState) {
            if ((this.NLSGetLoanDetailOperationCompleted == null)) {
                this.NLSGetLoanDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetLoanDetailOperationCompleted);
            }
            this.InvokeAsync("NLSGetLoanDetail", new object[] {
                        token,
                        LoanNumber}, this.NLSGetLoanDetailOperationCompleted, userState);
        }
        
        private void OnNLSGetLoanDetailOperationCompleted(object arg) {
            if ((this.NLSGetLoanDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetLoanDetailCompleted(this, new NLSGetLoanDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetLoanCreditLines", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetLoanCreditLines(string token, string LoanNumber) {
            object[] results = this.Invoke("NLSGetLoanCreditLines", new object[] {
                        token,
                        LoanNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetLoanCreditLinesAsync(string token, string LoanNumber) {
            this.NLSGetLoanCreditLinesAsync(token, LoanNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetLoanCreditLinesAsync(string token, string LoanNumber, object userState) {
            if ((this.NLSGetLoanCreditLinesOperationCompleted == null)) {
                this.NLSGetLoanCreditLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetLoanCreditLinesOperationCompleted);
            }
            this.InvokeAsync("NLSGetLoanCreditLines", new object[] {
                        token,
                        LoanNumber}, this.NLSGetLoanCreditLinesOperationCompleted, userState);
        }
        
        private void OnNLSGetLoanCreditLinesOperationCompleted(object arg) {
            if ((this.NLSGetLoanCreditLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetLoanCreditLinesCompleted(this, new NLSGetLoanCreditLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetContact", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetContact(string token, string ContactNumber) {
            object[] results = this.Invoke("NLSGetContact", new object[] {
                        token,
                        ContactNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetContactAsync(string token, string ContactNumber) {
            this.NLSGetContactAsync(token, ContactNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetContactAsync(string token, string ContactNumber, object userState) {
            if ((this.NLSGetContactOperationCompleted == null)) {
                this.NLSGetContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetContactOperationCompleted);
            }
            this.InvokeAsync("NLSGetContact", new object[] {
                        token,
                        ContactNumber}, this.NLSGetContactOperationCompleted, userState);
        }
        
        private void OnNLSGetContactOperationCompleted(object arg) {
            if ((this.NLSGetContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetContactCompleted(this, new NLSGetContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSStatementImage", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSStatementImage(string token, string LoanNumber, int DocumentID) {
            object[] results = this.Invoke("NLSStatementImage", new object[] {
                        token,
                        LoanNumber,
                        DocumentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSStatementImageAsync(string token, string LoanNumber, int DocumentID) {
            this.NLSStatementImageAsync(token, LoanNumber, DocumentID, null);
        }
        
        /// <remarks/>
        public void NLSStatementImageAsync(string token, string LoanNumber, int DocumentID, object userState) {
            if ((this.NLSStatementImageOperationCompleted == null)) {
                this.NLSStatementImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSStatementImageOperationCompleted);
            }
            this.InvokeAsync("NLSStatementImage", new object[] {
                        token,
                        LoanNumber,
                        DocumentID}, this.NLSStatementImageOperationCompleted, userState);
        }
        
        private void OnNLSStatementImageOperationCompleted(object arg) {
            if ((this.NLSStatementImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSStatementImageCompleted(this, new NLSStatementImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSStatementImageBase64", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSStatementImageBase64(string token, string LoanNumber, int DocumentID) {
            object[] results = this.Invoke("NLSStatementImageBase64", new object[] {
                        token,
                        LoanNumber,
                        DocumentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSStatementImageBase64Async(string token, string LoanNumber, int DocumentID) {
            this.NLSStatementImageBase64Async(token, LoanNumber, DocumentID, null);
        }
        
        /// <remarks/>
        public void NLSStatementImageBase64Async(string token, string LoanNumber, int DocumentID, object userState) {
            if ((this.NLSStatementImageBase64OperationCompleted == null)) {
                this.NLSStatementImageBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSStatementImageBase64OperationCompleted);
            }
            this.InvokeAsync("NLSStatementImageBase64", new object[] {
                        token,
                        LoanNumber,
                        DocumentID}, this.NLSStatementImageBase64OperationCompleted, userState);
        }
        
        private void OnNLSStatementImageBase64OperationCompleted(object arg) {
            if ((this.NLSStatementImageBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSStatementImageBase64Completed(this, new NLSStatementImageBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSLoanPendingTransactions", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSLoanPendingTransactions(string token, string LoanNumber) {
            object[] results = this.Invoke("NLSLoanPendingTransactions", new object[] {
                        token,
                        LoanNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSLoanPendingTransactionsAsync(string token, string LoanNumber) {
            this.NLSLoanPendingTransactionsAsync(token, LoanNumber, null);
        }
        
        /// <remarks/>
        public void NLSLoanPendingTransactionsAsync(string token, string LoanNumber, object userState) {
            if ((this.NLSLoanPendingTransactionsOperationCompleted == null)) {
                this.NLSLoanPendingTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSLoanPendingTransactionsOperationCompleted);
            }
            this.InvokeAsync("NLSLoanPendingTransactions", new object[] {
                        token,
                        LoanNumber}, this.NLSLoanPendingTransactionsOperationCompleted, userState);
        }
        
        private void OnNLSLoanPendingTransactionsOperationCompleted(object arg) {
            if ((this.NLSLoanPendingTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSLoanPendingTransactionsCompleted(this, new NLSLoanPendingTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSLogOut", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSLogOut(string token) {
            object[] results = this.Invoke("NLSLogOut", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSLogOutAsync(string token) {
            this.NLSLogOutAsync(token, null);
        }
        
        /// <remarks/>
        public void NLSLogOutAsync(string token, object userState) {
            if ((this.NLSLogOutOperationCompleted == null)) {
                this.NLSLogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSLogOutOperationCompleted);
            }
            this.InvokeAsync("NLSLogOut", new object[] {
                        token}, this.NLSLogOutOperationCompleted, userState);
        }
        
        private void OnNLSLogOutOperationCompleted(object arg) {
            if ((this.NLSLogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSLogOutCompleted(this, new NLSLogOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSVerifyContact", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSVerifyContact(string db_type, string server_name, string database_name, string FirstName, string LastName, string SSNumber, string Address, string City, string State, string Zip, string Phone, string LoanNumber, string EmailAddress) {
            object[] results = this.Invoke("NLSVerifyContact", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        FirstName,
                        LastName,
                        SSNumber,
                        Address,
                        City,
                        State,
                        Zip,
                        Phone,
                        LoanNumber,
                        EmailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSVerifyContactAsync(string db_type, string server_name, string database_name, string FirstName, string LastName, string SSNumber, string Address, string City, string State, string Zip, string Phone, string LoanNumber, string EmailAddress) {
            this.NLSVerifyContactAsync(db_type, server_name, database_name, FirstName, LastName, SSNumber, Address, City, State, Zip, Phone, LoanNumber, EmailAddress, null);
        }
        
        /// <remarks/>
        public void NLSVerifyContactAsync(string db_type, string server_name, string database_name, string FirstName, string LastName, string SSNumber, string Address, string City, string State, string Zip, string Phone, string LoanNumber, string EmailAddress, object userState) {
            if ((this.NLSVerifyContactOperationCompleted == null)) {
                this.NLSVerifyContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSVerifyContactOperationCompleted);
            }
            this.InvokeAsync("NLSVerifyContact", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        FirstName,
                        LastName,
                        SSNumber,
                        Address,
                        City,
                        State,
                        Zip,
                        Phone,
                        LoanNumber,
                        EmailAddress}, this.NLSVerifyContactOperationCompleted, userState);
        }
        
        private void OnNLSVerifyContactOperationCompleted(object arg) {
            if ((this.NLSVerifyContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSVerifyContactCompleted(this, new NLSVerifyContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSCreateCredentials", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSCreateCredentials(string token, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2) {
            object[] results = this.Invoke("NLSCreateCredentials", new object[] {
                        token,
                        ContactUserName,
                        ContactPassword,
                        PasswordHint1,
                        PasswordAnswer1,
                        PasswordHint2,
                        PasswordAnswer2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSCreateCredentialsAsync(string token, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2) {
            this.NLSCreateCredentialsAsync(token, ContactUserName, ContactPassword, PasswordHint1, PasswordAnswer1, PasswordHint2, PasswordAnswer2, null);
        }
        
        /// <remarks/>
        public void NLSCreateCredentialsAsync(string token, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2, object userState) {
            if ((this.NLSCreateCredentialsOperationCompleted == null)) {
                this.NLSCreateCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSCreateCredentialsOperationCompleted);
            }
            this.InvokeAsync("NLSCreateCredentials", new object[] {
                        token,
                        ContactUserName,
                        ContactPassword,
                        PasswordHint1,
                        PasswordAnswer1,
                        PasswordHint2,
                        PasswordAnswer2}, this.NLSCreateCredentialsOperationCompleted, userState);
        }
        
        private void OnNLSCreateCredentialsOperationCompleted(object arg) {
            if ((this.NLSCreateCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSCreateCredentialsCompleted(this, new NLSCreateCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSCreateCredentialsByContactType", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSCreateCredentialsByContactType(string token, string ContactType, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2) {
            object[] results = this.Invoke("NLSCreateCredentialsByContactType", new object[] {
                        token,
                        ContactType,
                        ContactUserName,
                        ContactPassword,
                        PasswordHint1,
                        PasswordAnswer1,
                        PasswordHint2,
                        PasswordAnswer2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSCreateCredentialsByContactTypeAsync(string token, string ContactType, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2) {
            this.NLSCreateCredentialsByContactTypeAsync(token, ContactType, ContactUserName, ContactPassword, PasswordHint1, PasswordAnswer1, PasswordHint2, PasswordAnswer2, null);
        }
        
        /// <remarks/>
        public void NLSCreateCredentialsByContactTypeAsync(string token, string ContactType, string ContactUserName, string ContactPassword, string PasswordHint1, string PasswordAnswer1, string PasswordHint2, string PasswordAnswer2, object userState) {
            if ((this.NLSCreateCredentialsByContactTypeOperationCompleted == null)) {
                this.NLSCreateCredentialsByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSCreateCredentialsByContactTypeOperationCompleted);
            }
            this.InvokeAsync("NLSCreateCredentialsByContactType", new object[] {
                        token,
                        ContactType,
                        ContactUserName,
                        ContactPassword,
                        PasswordHint1,
                        PasswordAnswer1,
                        PasswordHint2,
                        PasswordAnswer2}, this.NLSCreateCredentialsByContactTypeOperationCompleted, userState);
        }
        
        private void OnNLSCreateCredentialsByContactTypeOperationCompleted(object arg) {
            if ((this.NLSCreateCredentialsByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSCreateCredentialsByContactTypeCompleted(this, new NLSCreateCredentialsByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryByEmail", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryByEmail(string db_type, string server_name, string database_name, string ContactUserName, string IPAddress) {
            object[] results = this.Invoke("NLSPasswordRecoveryByEmail", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        IPAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryByEmailAsync(string db_type, string server_name, string database_name, string ContactUserName, string IPAddress) {
            this.NLSPasswordRecoveryByEmailAsync(db_type, server_name, database_name, ContactUserName, IPAddress, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryByEmailAsync(string db_type, string server_name, string database_name, string ContactUserName, string IPAddress, object userState) {
            if ((this.NLSPasswordRecoveryByEmailOperationCompleted == null)) {
                this.NLSPasswordRecoveryByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryByEmailOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryByEmail", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        IPAddress}, this.NLSPasswordRecoveryByEmailOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryByEmailOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryByEmailCompleted(this, new NLSPasswordRecoveryByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryByEmailByContactType", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryByEmailByContactType(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string IPAddress) {
            object[] results = this.Invoke("NLSPasswordRecoveryByEmailByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        IPAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryByEmailByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string IPAddress) {
            this.NLSPasswordRecoveryByEmailByContactTypeAsync(ContactType, db_type, server_name, database_name, ContactUserName, IPAddress, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryByEmailByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string IPAddress, object userState) {
            if ((this.NLSPasswordRecoveryByEmailByContactTypeOperationCompleted == null)) {
                this.NLSPasswordRecoveryByEmailByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryByEmailByContactTypeOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryByEmailByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        IPAddress}, this.NLSPasswordRecoveryByEmailByContactTypeOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryByEmailByContactTypeOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryByEmailByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryByEmailByContactTypeCompleted(this, new NLSPasswordRecoveryByEmailByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryHints", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryHints(string db_type, string server_name, string database_name, string ContactUserName) {
            object[] results = this.Invoke("NLSPasswordRecoveryHints", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryHintsAsync(string db_type, string server_name, string database_name, string ContactUserName) {
            this.NLSPasswordRecoveryHintsAsync(db_type, server_name, database_name, ContactUserName, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryHintsAsync(string db_type, string server_name, string database_name, string ContactUserName, object userState) {
            if ((this.NLSPasswordRecoveryHintsOperationCompleted == null)) {
                this.NLSPasswordRecoveryHintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryHintsOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryHints", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName}, this.NLSPasswordRecoveryHintsOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryHintsOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryHintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryHintsCompleted(this, new NLSPasswordRecoveryHintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryHintsByContactType", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryHintsByContactType(string ContactType, string db_type, string server_name, string database_name, string ContactUserName) {
            object[] results = this.Invoke("NLSPasswordRecoveryHintsByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryHintsByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName) {
            this.NLSPasswordRecoveryHintsByContactTypeAsync(ContactType, db_type, server_name, database_name, ContactUserName, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryHintsByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, object userState) {
            if ((this.NLSPasswordRecoveryHintsByContactTypeOperationCompleted == null)) {
                this.NLSPasswordRecoveryHintsByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryHintsByContactTypeOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryHintsByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName}, this.NLSPasswordRecoveryHintsByContactTypeOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryHintsByContactTypeOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryHintsByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryHintsByContactTypeCompleted(this, new NLSPasswordRecoveryHintsByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryAnswers", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryAnswers(string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2) {
            object[] results = this.Invoke("NLSPasswordRecoveryAnswers", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        HintAnswer1,
                        HintAnswer2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryAnswersAsync(string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2) {
            this.NLSPasswordRecoveryAnswersAsync(db_type, server_name, database_name, ContactUserName, HintAnswer1, HintAnswer2, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryAnswersAsync(string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2, object userState) {
            if ((this.NLSPasswordRecoveryAnswersOperationCompleted == null)) {
                this.NLSPasswordRecoveryAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryAnswersOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryAnswers", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        HintAnswer1,
                        HintAnswer2}, this.NLSPasswordRecoveryAnswersOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryAnswersOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryAnswersCompleted(this, new NLSPasswordRecoveryAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSPasswordRecoveryAnswersByContactType", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSPasswordRecoveryAnswersByContactType(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2) {
            object[] results = this.Invoke("NLSPasswordRecoveryAnswersByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        HintAnswer1,
                        HintAnswer2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryAnswersByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2) {
            this.NLSPasswordRecoveryAnswersByContactTypeAsync(ContactType, db_type, server_name, database_name, ContactUserName, HintAnswer1, HintAnswer2, null);
        }
        
        /// <remarks/>
        public void NLSPasswordRecoveryAnswersByContactTypeAsync(string ContactType, string db_type, string server_name, string database_name, string ContactUserName, string HintAnswer1, string HintAnswer2, object userState) {
            if ((this.NLSPasswordRecoveryAnswersByContactTypeOperationCompleted == null)) {
                this.NLSPasswordRecoveryAnswersByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSPasswordRecoveryAnswersByContactTypeOperationCompleted);
            }
            this.InvokeAsync("NLSPasswordRecoveryAnswersByContactType", new object[] {
                        ContactType,
                        db_type,
                        server_name,
                        database_name,
                        ContactUserName,
                        HintAnswer1,
                        HintAnswer2}, this.NLSPasswordRecoveryAnswersByContactTypeOperationCompleted, userState);
        }
        
        private void OnNLSPasswordRecoveryAnswersByContactTypeOperationCompleted(object arg) {
            if ((this.NLSPasswordRecoveryAnswersByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSPasswordRecoveryAnswersByContactTypeCompleted(this, new NLSPasswordRecoveryAnswersByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSChangePassword", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSChangePassword(string token, string OldPassword, string NewPassword) {
            object[] results = this.Invoke("NLSChangePassword", new object[] {
                        token,
                        OldPassword,
                        NewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSChangePasswordAsync(string token, string OldPassword, string NewPassword) {
            this.NLSChangePasswordAsync(token, OldPassword, NewPassword, null);
        }
        
        /// <remarks/>
        public void NLSChangePasswordAsync(string token, string OldPassword, string NewPassword, object userState) {
            if ((this.NLSChangePasswordOperationCompleted == null)) {
                this.NLSChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSChangePasswordOperationCompleted);
            }
            this.InvokeAsync("NLSChangePassword", new object[] {
                        token,
                        OldPassword,
                        NewPassword}, this.NLSChangePasswordOperationCompleted, userState);
        }
        
        private void OnNLSChangePasswordOperationCompleted(object arg) {
            if ((this.NLSChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSChangePasswordCompleted(this, new NLSChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSForceChangePassword", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSForceChangePassword(string token, string NewPassword) {
            object[] results = this.Invoke("NLSForceChangePassword", new object[] {
                        token,
                        NewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSForceChangePasswordAsync(string token, string NewPassword) {
            this.NLSForceChangePasswordAsync(token, NewPassword, null);
        }
        
        /// <remarks/>
        public void NLSForceChangePasswordAsync(string token, string NewPassword, object userState) {
            if ((this.NLSForceChangePasswordOperationCompleted == null)) {
                this.NLSForceChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSForceChangePasswordOperationCompleted);
            }
            this.InvokeAsync("NLSForceChangePassword", new object[] {
                        token,
                        NewPassword}, this.NLSForceChangePasswordOperationCompleted, userState);
        }
        
        private void OnNLSForceChangePasswordOperationCompleted(object arg) {
            if ((this.NLSForceChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSForceChangePasswordCompleted(this, new NLSForceChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetContactTaskList", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetContactTaskList(string token, string ContactNumber) {
            object[] results = this.Invoke("NLSGetContactTaskList", new object[] {
                        token,
                        ContactNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetContactTaskListAsync(string token, string ContactNumber) {
            this.NLSGetContactTaskListAsync(token, ContactNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetContactTaskListAsync(string token, string ContactNumber, object userState) {
            if ((this.NLSGetContactTaskListOperationCompleted == null)) {
                this.NLSGetContactTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetContactTaskListOperationCompleted);
            }
            this.InvokeAsync("NLSGetContactTaskList", new object[] {
                        token,
                        ContactNumber}, this.NLSGetContactTaskListOperationCompleted, userState);
        }
        
        private void OnNLSGetContactTaskListOperationCompleted(object arg) {
            if ((this.NLSGetContactTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetContactTaskListCompleted(this, new NLSGetContactTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetContactTaskRelationshipsList", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetContactTaskRelationshipsList(string token, string ContactNumber) {
            object[] results = this.Invoke("NLSGetContactTaskRelationshipsList", new object[] {
                        token,
                        ContactNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetContactTaskRelationshipsListAsync(string token, string ContactNumber) {
            this.NLSGetContactTaskRelationshipsListAsync(token, ContactNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetContactTaskRelationshipsListAsync(string token, string ContactNumber, object userState) {
            if ((this.NLSGetContactTaskRelationshipsListOperationCompleted == null)) {
                this.NLSGetContactTaskRelationshipsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetContactTaskRelationshipsListOperationCompleted);
            }
            this.InvokeAsync("NLSGetContactTaskRelationshipsList", new object[] {
                        token,
                        ContactNumber}, this.NLSGetContactTaskRelationshipsListOperationCompleted, userState);
        }
        
        private void OnNLSGetContactTaskRelationshipsListOperationCompleted(object arg) {
            if ((this.NLSGetContactTaskRelationshipsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetContactTaskRelationshipsListCompleted(this, new NLSGetContactTaskRelationshipsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetTaskDetail", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetTaskDetail(string token, int TaskRefno) {
            object[] results = this.Invoke("NLSGetTaskDetail", new object[] {
                        token,
                        TaskRefno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetTaskDetailAsync(string token, int TaskRefno) {
            this.NLSGetTaskDetailAsync(token, TaskRefno, null);
        }
        
        /// <remarks/>
        public void NLSGetTaskDetailAsync(string token, int TaskRefno, object userState) {
            if ((this.NLSGetTaskDetailOperationCompleted == null)) {
                this.NLSGetTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetTaskDetailOperationCompleted);
            }
            this.InvokeAsync("NLSGetTaskDetail", new object[] {
                        token,
                        TaskRefno}, this.NLSGetTaskDetailOperationCompleted, userState);
        }
        
        private void OnNLSGetTaskDetailOperationCompleted(object arg) {
            if ((this.NLSGetTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetTaskDetailCompleted(this, new NLSGetTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSContactUDF", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSContactUDF(string token, string ContactNumber, string FieldsToReturn) {
            object[] results = this.Invoke("NLSContactUDF", new object[] {
                        token,
                        ContactNumber,
                        FieldsToReturn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSContactUDFAsync(string token, string ContactNumber, string FieldsToReturn) {
            this.NLSContactUDFAsync(token, ContactNumber, FieldsToReturn, null);
        }
        
        /// <remarks/>
        public void NLSContactUDFAsync(string token, string ContactNumber, string FieldsToReturn, object userState) {
            if ((this.NLSContactUDFOperationCompleted == null)) {
                this.NLSContactUDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSContactUDFOperationCompleted);
            }
            this.InvokeAsync("NLSContactUDF", new object[] {
                        token,
                        ContactNumber,
                        FieldsToReturn}, this.NLSContactUDFOperationCompleted, userState);
        }
        
        private void OnNLSContactUDFOperationCompleted(object arg) {
            if ((this.NLSContactUDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSContactUDFCompleted(this, new NLSContactUDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSLoanDetailUDF", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSLoanDetailUDF(string token, string LoanNumber, string FieldsToReturn) {
            object[] results = this.Invoke("NLSLoanDetailUDF", new object[] {
                        token,
                        LoanNumber,
                        FieldsToReturn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSLoanDetailUDFAsync(string token, string LoanNumber, string FieldsToReturn) {
            this.NLSLoanDetailUDFAsync(token, LoanNumber, FieldsToReturn, null);
        }
        
        /// <remarks/>
        public void NLSLoanDetailUDFAsync(string token, string LoanNumber, string FieldsToReturn, object userState) {
            if ((this.NLSLoanDetailUDFOperationCompleted == null)) {
                this.NLSLoanDetailUDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSLoanDetailUDFOperationCompleted);
            }
            this.InvokeAsync("NLSLoanDetailUDF", new object[] {
                        token,
                        LoanNumber,
                        FieldsToReturn}, this.NLSLoanDetailUDFOperationCompleted, userState);
        }
        
        private void OnNLSLoanDetailUDFOperationCompleted(object arg) {
            if ((this.NLSLoanDetailUDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSLoanDetailUDFCompleted(this, new NLSLoanDetailUDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSLoanPaymentsDue", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSLoanPaymentsDue(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            object[] results = this.Invoke("NLSLoanPaymentsDue", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSLoanPaymentsDueAsync(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            this.NLSLoanPaymentsDueAsync(token, LoanNumber, BeginningDate, EndingDate, null);
        }
        
        /// <remarks/>
        public void NLSLoanPaymentsDueAsync(string token, string LoanNumber, string BeginningDate, string EndingDate, object userState) {
            if ((this.NLSLoanPaymentsDueOperationCompleted == null)) {
                this.NLSLoanPaymentsDueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSLoanPaymentsDueOperationCompleted);
            }
            this.InvokeAsync("NLSLoanPaymentsDue", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate}, this.NLSLoanPaymentsDueOperationCompleted, userState);
        }
        
        private void OnNLSLoanPaymentsDueOperationCompleted(object arg) {
            if ((this.NLSLoanPaymentsDueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSLoanPaymentsDueCompleted(this, new NLSLoanPaymentsDueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSLoanPaymentHistory", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSLoanPaymentHistory(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            object[] results = this.Invoke("NLSLoanPaymentHistory", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSLoanPaymentHistoryAsync(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            this.NLSLoanPaymentHistoryAsync(token, LoanNumber, BeginningDate, EndingDate, null);
        }
        
        /// <remarks/>
        public void NLSLoanPaymentHistoryAsync(string token, string LoanNumber, string BeginningDate, string EndingDate, object userState) {
            if ((this.NLSLoanPaymentHistoryOperationCompleted == null)) {
                this.NLSLoanPaymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSLoanPaymentHistoryOperationCompleted);
            }
            this.InvokeAsync("NLSLoanPaymentHistory", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate}, this.NLSLoanPaymentHistoryOperationCompleted, userState);
        }
        
        private void OnNLSLoanPaymentHistoryOperationCompleted(object arg) {
            if ((this.NLSLoanPaymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSLoanPaymentHistoryCompleted(this, new NLSLoanPaymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSStatements", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSStatements(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            object[] results = this.Invoke("NLSStatements", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSStatementsAsync(string token, string LoanNumber, string BeginningDate, string EndingDate) {
            this.NLSStatementsAsync(token, LoanNumber, BeginningDate, EndingDate, null);
        }
        
        /// <remarks/>
        public void NLSStatementsAsync(string token, string LoanNumber, string BeginningDate, string EndingDate, object userState) {
            if ((this.NLSStatementsOperationCompleted == null)) {
                this.NLSStatementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSStatementsOperationCompleted);
            }
            this.InvokeAsync("NLSStatements", new object[] {
                        token,
                        LoanNumber,
                        BeginningDate,
                        EndingDate}, this.NLSStatementsOperationCompleted, userState);
        }
        
        private void OnNLSStatementsOperationCompleted(object arg) {
            if ((this.NLSStatementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSStatementsCompleted(this, new NLSStatementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetLoanStatuses", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetLoanStatuses(string token, string LoanNumber) {
            object[] results = this.Invoke("NLSGetLoanStatuses", new object[] {
                        token,
                        LoanNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetLoanStatusesAsync(string token, string LoanNumber) {
            this.NLSGetLoanStatusesAsync(token, LoanNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetLoanStatusesAsync(string token, string LoanNumber, object userState) {
            if ((this.NLSGetLoanStatusesOperationCompleted == null)) {
                this.NLSGetLoanStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetLoanStatusesOperationCompleted);
            }
            this.InvokeAsync("NLSGetLoanStatuses", new object[] {
                        token,
                        LoanNumber}, this.NLSGetLoanStatusesOperationCompleted, userState);
        }
        
        private void OnNLSGetLoanStatusesOperationCompleted(object arg) {
            if ((this.NLSGetLoanStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetLoanStatusesCompleted(this, new NLSGetLoanStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVendorAcctList", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVendorAcctList(string token, string ContactNumber) {
            object[] results = this.Invoke("NLSGetVendorAcctList", new object[] {
                        token,
                        ContactNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVendorAcctListAsync(string token, string ContactNumber) {
            this.NLSGetVendorAcctListAsync(token, ContactNumber, null);
        }
        
        /// <remarks/>
        public void NLSGetVendorAcctListAsync(string token, string ContactNumber, object userState) {
            if ((this.NLSGetVendorAcctListOperationCompleted == null)) {
                this.NLSGetVendorAcctListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVendorAcctListOperationCompleted);
            }
            this.InvokeAsync("NLSGetVendorAcctList", new object[] {
                        token,
                        ContactNumber}, this.NLSGetVendorAcctListOperationCompleted, userState);
        }
        
        private void OnNLSGetVendorAcctListOperationCompleted(object arg) {
            if ((this.NLSGetVendorAcctListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVendorAcctListCompleted(this, new NLSGetVendorAcctListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVendorAcctDetail", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVendorAcctDetail(string token, int VendorID) {
            object[] results = this.Invoke("NLSGetVendorAcctDetail", new object[] {
                        token,
                        VendorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVendorAcctDetailAsync(string token, int VendorID) {
            this.NLSGetVendorAcctDetailAsync(token, VendorID, null);
        }
        
        /// <remarks/>
        public void NLSGetVendorAcctDetailAsync(string token, int VendorID, object userState) {
            if ((this.NLSGetVendorAcctDetailOperationCompleted == null)) {
                this.NLSGetVendorAcctDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVendorAcctDetailOperationCompleted);
            }
            this.InvokeAsync("NLSGetVendorAcctDetail", new object[] {
                        token,
                        VendorID}, this.NLSGetVendorAcctDetailOperationCompleted, userState);
        }
        
        private void OnNLSGetVendorAcctDetailOperationCompleted(object arg) {
            if ((this.NLSGetVendorAcctDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVendorAcctDetailCompleted(this, new NLSGetVendorAcctDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVoucherList", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVoucherList(string token, int VendorID) {
            object[] results = this.Invoke("NLSGetVoucherList", new object[] {
                        token,
                        VendorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVoucherListAsync(string token, int VendorID) {
            this.NLSGetVoucherListAsync(token, VendorID, null);
        }
        
        /// <remarks/>
        public void NLSGetVoucherListAsync(string token, int VendorID, object userState) {
            if ((this.NLSGetVoucherListOperationCompleted == null)) {
                this.NLSGetVoucherListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVoucherListOperationCompleted);
            }
            this.InvokeAsync("NLSGetVoucherList", new object[] {
                        token,
                        VendorID}, this.NLSGetVoucherListOperationCompleted, userState);
        }
        
        private void OnNLSGetVoucherListOperationCompleted(object arg) {
            if ((this.NLSGetVoucherListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVoucherListCompleted(this, new NLSGetVoucherListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetStipulationListByContact", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetStipulationListByContact(string token, string ContactNumber, bool IncludeCompletedStipulations) {
            object[] results = this.Invoke("NLSGetStipulationListByContact", new object[] {
                        token,
                        ContactNumber,
                        IncludeCompletedStipulations});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetStipulationListByContactAsync(string token, string ContactNumber, bool IncludeCompletedStipulations) {
            this.NLSGetStipulationListByContactAsync(token, ContactNumber, IncludeCompletedStipulations, null);
        }
        
        /// <remarks/>
        public void NLSGetStipulationListByContactAsync(string token, string ContactNumber, bool IncludeCompletedStipulations, object userState) {
            if ((this.NLSGetStipulationListByContactOperationCompleted == null)) {
                this.NLSGetStipulationListByContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetStipulationListByContactOperationCompleted);
            }
            this.InvokeAsync("NLSGetStipulationListByContact", new object[] {
                        token,
                        ContactNumber,
                        IncludeCompletedStipulations}, this.NLSGetStipulationListByContactOperationCompleted, userState);
        }
        
        private void OnNLSGetStipulationListByContactOperationCompleted(object arg) {
            if ((this.NLSGetStipulationListByContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetStipulationListByContactCompleted(this, new NLSGetStipulationListByContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetStipulationListByTask", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetStipulationListByTask(string token, int TaskRefno, bool IncludeCompletedStipulations) {
            object[] results = this.Invoke("NLSGetStipulationListByTask", new object[] {
                        token,
                        TaskRefno,
                        IncludeCompletedStipulations});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetStipulationListByTaskAsync(string token, int TaskRefno, bool IncludeCompletedStipulations) {
            this.NLSGetStipulationListByTaskAsync(token, TaskRefno, IncludeCompletedStipulations, null);
        }
        
        /// <remarks/>
        public void NLSGetStipulationListByTaskAsync(string token, int TaskRefno, bool IncludeCompletedStipulations, object userState) {
            if ((this.NLSGetStipulationListByTaskOperationCompleted == null)) {
                this.NLSGetStipulationListByTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetStipulationListByTaskOperationCompleted);
            }
            this.InvokeAsync("NLSGetStipulationListByTask", new object[] {
                        token,
                        TaskRefno,
                        IncludeCompletedStipulations}, this.NLSGetStipulationListByTaskOperationCompleted, userState);
        }
        
        private void OnNLSGetStipulationListByTaskOperationCompleted(object arg) {
            if ((this.NLSGetStipulationListByTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetStipulationListByTaskCompleted(this, new NLSGetStipulationListByTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVerificationListByContact", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVerificationListByContact(string token, string ContactNumber, bool IncludeCompletedVerification) {
            object[] results = this.Invoke("NLSGetVerificationListByContact", new object[] {
                        token,
                        ContactNumber,
                        IncludeCompletedVerification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVerificationListByContactAsync(string token, string ContactNumber, bool IncludeCompletedVerification) {
            this.NLSGetVerificationListByContactAsync(token, ContactNumber, IncludeCompletedVerification, null);
        }
        
        /// <remarks/>
        public void NLSGetVerificationListByContactAsync(string token, string ContactNumber, bool IncludeCompletedVerification, object userState) {
            if ((this.NLSGetVerificationListByContactOperationCompleted == null)) {
                this.NLSGetVerificationListByContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVerificationListByContactOperationCompleted);
            }
            this.InvokeAsync("NLSGetVerificationListByContact", new object[] {
                        token,
                        ContactNumber,
                        IncludeCompletedVerification}, this.NLSGetVerificationListByContactOperationCompleted, userState);
        }
        
        private void OnNLSGetVerificationListByContactOperationCompleted(object arg) {
            if ((this.NLSGetVerificationListByContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVerificationListByContactCompleted(this, new NLSGetVerificationListByContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVerificationListByTask", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVerificationListByTask(string token, int TaskRefno, bool IncludeCompletedVerification) {
            object[] results = this.Invoke("NLSGetVerificationListByTask", new object[] {
                        token,
                        TaskRefno,
                        IncludeCompletedVerification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVerificationListByTaskAsync(string token, int TaskRefno, bool IncludeCompletedVerification) {
            this.NLSGetVerificationListByTaskAsync(token, TaskRefno, IncludeCompletedVerification, null);
        }
        
        /// <remarks/>
        public void NLSGetVerificationListByTaskAsync(string token, int TaskRefno, bool IncludeCompletedVerification, object userState) {
            if ((this.NLSGetVerificationListByTaskOperationCompleted == null)) {
                this.NLSGetVerificationListByTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVerificationListByTaskOperationCompleted);
            }
            this.InvokeAsync("NLSGetVerificationListByTask", new object[] {
                        token,
                        TaskRefno,
                        IncludeCompletedVerification}, this.NLSGetVerificationListByTaskOperationCompleted, userState);
        }
        
        private void OnNLSGetVerificationListByTaskOperationCompleted(object arg) {
            if ((this.NLSGetVerificationListByTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVerificationListByTaskCompleted(this, new NLSGetVerificationListByTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetTaskUDF", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetTaskUDF(string token, int TaskRefno, string FieldsToReturn) {
            object[] results = this.Invoke("NLSGetTaskUDF", new object[] {
                        token,
                        TaskRefno,
                        FieldsToReturn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetTaskUDFAsync(string token, int TaskRefno, string FieldsToReturn) {
            this.NLSGetTaskUDFAsync(token, TaskRefno, FieldsToReturn, null);
        }
        
        /// <remarks/>
        public void NLSGetTaskUDFAsync(string token, int TaskRefno, string FieldsToReturn, object userState) {
            if ((this.NLSGetTaskUDFOperationCompleted == null)) {
                this.NLSGetTaskUDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetTaskUDFOperationCompleted);
            }
            this.InvokeAsync("NLSGetTaskUDF", new object[] {
                        token,
                        TaskRefno,
                        FieldsToReturn}, this.NLSGetTaskUDFOperationCompleted, userState);
        }
        
        private void OnNLSGetTaskUDFOperationCompleted(object arg) {
            if ((this.NLSGetTaskUDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetTaskUDFCompleted(this, new NLSGetTaskUDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSGetVoucherListByStatus", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSGetVoucherListByStatus(string token, int VendorID, string VoucherStatus) {
            object[] results = this.Invoke("NLSGetVoucherListByStatus", new object[] {
                        token,
                        VendorID,
                        VoucherStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSGetVoucherListByStatusAsync(string token, int VendorID, string VoucherStatus) {
            this.NLSGetVoucherListByStatusAsync(token, VendorID, VoucherStatus, null);
        }
        
        /// <remarks/>
        public void NLSGetVoucherListByStatusAsync(string token, int VendorID, string VoucherStatus, object userState) {
            if ((this.NLSGetVoucherListByStatusOperationCompleted == null)) {
                this.NLSGetVoucherListByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSGetVoucherListByStatusOperationCompleted);
            }
            this.InvokeAsync("NLSGetVoucherListByStatus", new object[] {
                        token,
                        VendorID,
                        VoucherStatus}, this.NLSGetVoucherListByStatusOperationCompleted, userState);
        }
        
        private void OnNLSGetVoucherListByStatusOperationCompleted(object arg) {
            if ((this.NLSGetVoucherListByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSGetVoucherListByStatusCompleted(this, new NLSGetVoucherListByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/APR", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double APR(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod) {
            object[] results = this.Invoke("APR", new object[] {
                        LoanAmount,
                        FirstPaymentAmount,
                        RegularPaymentAmount,
                        NumberOfPayments,
                        PaymentPeriod,
                        OddDaysInFirstPeriod,
                        PeriodsInFirstPeriod});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void APRAsync(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod) {
            this.APRAsync(LoanAmount, FirstPaymentAmount, RegularPaymentAmount, NumberOfPayments, PaymentPeriod, OddDaysInFirstPeriod, PeriodsInFirstPeriod, null);
        }
        
        /// <remarks/>
        public void APRAsync(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod, object userState) {
            if ((this.APROperationCompleted == null)) {
                this.APROperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPROperationCompleted);
            }
            this.InvokeAsync("APR", new object[] {
                        LoanAmount,
                        FirstPaymentAmount,
                        RegularPaymentAmount,
                        NumberOfPayments,
                        PaymentPeriod,
                        OddDaysInFirstPeriod,
                        PeriodsInFirstPeriod}, this.APROperationCompleted, userState);
        }
        
        private void OnAPROperationCompleted(object arg) {
            if ((this.APRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APRCompleted(this, new APRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/APRIrregularLastPayment", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double APRIrregularLastPayment(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, double LastPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod) {
            object[] results = this.Invoke("APRIrregularLastPayment", new object[] {
                        LoanAmount,
                        FirstPaymentAmount,
                        RegularPaymentAmount,
                        LastPaymentAmount,
                        NumberOfPayments,
                        PaymentPeriod,
                        OddDaysInFirstPeriod,
                        PeriodsInFirstPeriod});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void APRIrregularLastPaymentAsync(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, double LastPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod) {
            this.APRIrregularLastPaymentAsync(LoanAmount, FirstPaymentAmount, RegularPaymentAmount, LastPaymentAmount, NumberOfPayments, PaymentPeriod, OddDaysInFirstPeriod, PeriodsInFirstPeriod, null);
        }
        
        /// <remarks/>
        public void APRIrregularLastPaymentAsync(double LoanAmount, double FirstPaymentAmount, double RegularPaymentAmount, double LastPaymentAmount, int NumberOfPayments, string PaymentPeriod, int OddDaysInFirstPeriod, int PeriodsInFirstPeriod, object userState) {
            if ((this.APRIrregularLastPaymentOperationCompleted == null)) {
                this.APRIrregularLastPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPRIrregularLastPaymentOperationCompleted);
            }
            this.InvokeAsync("APRIrregularLastPayment", new object[] {
                        LoanAmount,
                        FirstPaymentAmount,
                        RegularPaymentAmount,
                        LastPaymentAmount,
                        NumberOfPayments,
                        PaymentPeriod,
                        OddDaysInFirstPeriod,
                        PeriodsInFirstPeriod}, this.APRIrregularLastPaymentOperationCompleted, userState);
        }
        
        private void OnAPRIrregularLastPaymentOperationCompleted(object arg) {
            if ((this.APRIrregularLastPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APRIrregularLastPaymentCompleted(this, new APRIrregularLastPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/CalculateActualIntYearAmortizedPayment", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateActualIntYearAmortizedPayment(
                    double loan_amount, 
                    double interest_rate, 
                    int number_of_payments, 
                    int number_of_payments_due, 
                    int payments_per_year, 
                    string interestyearapplied, 
                    string interestyearcalc, 
                    string startdate_YYYYMMDD, 
                    string maturitydate_YYYYMMDD, 
                    string interestmethod, 
                    string firstpaymentdate_YYYYMMDD, 
                    int accrual_cutoff, 
                    string interestperiod, 
                    int interestpayment_dayvalue, 
                    string firstorlastdayinterest, 
                    string begorendaccrual) {
            object[] results = this.Invoke("CalculateActualIntYearAmortizedPayment", new object[] {
                        loan_amount,
                        interest_rate,
                        number_of_payments,
                        number_of_payments_due,
                        payments_per_year,
                        interestyearapplied,
                        interestyearcalc,
                        startdate_YYYYMMDD,
                        maturitydate_YYYYMMDD,
                        interestmethod,
                        firstpaymentdate_YYYYMMDD,
                        accrual_cutoff,
                        interestperiod,
                        interestpayment_dayvalue,
                        firstorlastdayinterest,
                        begorendaccrual});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateActualIntYearAmortizedPaymentAsync(
                    double loan_amount, 
                    double interest_rate, 
                    int number_of_payments, 
                    int number_of_payments_due, 
                    int payments_per_year, 
                    string interestyearapplied, 
                    string interestyearcalc, 
                    string startdate_YYYYMMDD, 
                    string maturitydate_YYYYMMDD, 
                    string interestmethod, 
                    string firstpaymentdate_YYYYMMDD, 
                    int accrual_cutoff, 
                    string interestperiod, 
                    int interestpayment_dayvalue, 
                    string firstorlastdayinterest, 
                    string begorendaccrual) {
            this.CalculateActualIntYearAmortizedPaymentAsync(loan_amount, interest_rate, number_of_payments, number_of_payments_due, payments_per_year, interestyearapplied, interestyearcalc, startdate_YYYYMMDD, maturitydate_YYYYMMDD, interestmethod, firstpaymentdate_YYYYMMDD, accrual_cutoff, interestperiod, interestpayment_dayvalue, firstorlastdayinterest, begorendaccrual, null);
        }
        
        /// <remarks/>
        public void CalculateActualIntYearAmortizedPaymentAsync(
                    double loan_amount, 
                    double interest_rate, 
                    int number_of_payments, 
                    int number_of_payments_due, 
                    int payments_per_year, 
                    string interestyearapplied, 
                    string interestyearcalc, 
                    string startdate_YYYYMMDD, 
                    string maturitydate_YYYYMMDD, 
                    string interestmethod, 
                    string firstpaymentdate_YYYYMMDD, 
                    int accrual_cutoff, 
                    string interestperiod, 
                    int interestpayment_dayvalue, 
                    string firstorlastdayinterest, 
                    string begorendaccrual, 
                    object userState) {
            if ((this.CalculateActualIntYearAmortizedPaymentOperationCompleted == null)) {
                this.CalculateActualIntYearAmortizedPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateActualIntYearAmortizedPaymentOperationCompleted);
            }
            this.InvokeAsync("CalculateActualIntYearAmortizedPayment", new object[] {
                        loan_amount,
                        interest_rate,
                        number_of_payments,
                        number_of_payments_due,
                        payments_per_year,
                        interestyearapplied,
                        interestyearcalc,
                        startdate_YYYYMMDD,
                        maturitydate_YYYYMMDD,
                        interestmethod,
                        firstpaymentdate_YYYYMMDD,
                        accrual_cutoff,
                        interestperiod,
                        interestpayment_dayvalue,
                        firstorlastdayinterest,
                        begorendaccrual}, this.CalculateActualIntYearAmortizedPaymentOperationCompleted, userState);
        }
        
        private void OnCalculateActualIntYearAmortizedPaymentOperationCompleted(object arg) {
            if ((this.CalculateActualIntYearAmortizedPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateActualIntYearAmortizedPaymentCompleted(this, new CalculateActualIntYearAmortizedPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/IRR", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double IRR(int num_of_period, double payment_amount, double present_value, int number_of_periods_in_a_year) {
            object[] results = this.Invoke("IRR", new object[] {
                        num_of_period,
                        payment_amount,
                        present_value,
                        number_of_periods_in_a_year});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void IRRAsync(int num_of_period, double payment_amount, double present_value, int number_of_periods_in_a_year) {
            this.IRRAsync(num_of_period, payment_amount, present_value, number_of_periods_in_a_year, null);
        }
        
        /// <remarks/>
        public void IRRAsync(int num_of_period, double payment_amount, double present_value, int number_of_periods_in_a_year, object userState) {
            if ((this.IRROperationCompleted == null)) {
                this.IRROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIRROperationCompleted);
            }
            this.InvokeAsync("IRR", new object[] {
                        num_of_period,
                        payment_amount,
                        present_value,
                        number_of_periods_in_a_year}, this.IRROperationCompleted, userState);
        }
        
        private void OnIRROperationCompleted(object arg) {
            if ((this.IRRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IRRCompleted(this, new IRRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NPV", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double NPV(double payment_amount, int num_of_payments, double rate, int payments_per_year) {
            object[] results = this.Invoke("NPV", new object[] {
                        payment_amount,
                        num_of_payments,
                        rate,
                        payments_per_year});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void NPVAsync(double payment_amount, int num_of_payments, double rate, int payments_per_year) {
            this.NPVAsync(payment_amount, num_of_payments, rate, payments_per_year, null);
        }
        
        /// <remarks/>
        public void NPVAsync(double payment_amount, int num_of_payments, double rate, int payments_per_year, object userState) {
            if ((this.NPVOperationCompleted == null)) {
                this.NPVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNPVOperationCompleted);
            }
            this.InvokeAsync("NPV", new object[] {
                        payment_amount,
                        num_of_payments,
                        rate,
                        payments_per_year}, this.NPVOperationCompleted, userState);
        }
        
        private void OnNPVOperationCompleted(object arg) {
            if ((this.NPVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NPVCompleted(this, new NPVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/SendEmailMessage", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendEmailMessage(string token, string serverName, string toEmail, string fromEmail, string subject, string body) {
            object[] results = this.Invoke("SendEmailMessage", new object[] {
                        token,
                        serverName,
                        toEmail,
                        fromEmail,
                        subject,
                        body});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailMessageAsync(string token, string serverName, string toEmail, string fromEmail, string subject, string body) {
            this.SendEmailMessageAsync(token, serverName, toEmail, fromEmail, subject, body, null);
        }
        
        /// <remarks/>
        public void SendEmailMessageAsync(string token, string serverName, string toEmail, string fromEmail, string subject, string body, object userState) {
            if ((this.SendEmailMessageOperationCompleted == null)) {
                this.SendEmailMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailMessageOperationCompleted);
            }
            this.InvokeAsync("SendEmailMessage", new object[] {
                        token,
                        serverName,
                        toEmail,
                        fromEmail,
                        subject,
                        body}, this.SendEmailMessageOperationCompleted, userState);
        }
        
        private void OnSendEmailMessageOperationCompleted(object arg) {
            if ((this.SendEmailMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailMessageCompleted(this, new SendEmailMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/XIRR", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double XIRR(double present_value, string cash_flow_list, string start_date_YYYYMMDD, string end_date_YYYYMMDD, string interest_year_calc, string interest_year_applied, string beg_or_ending_period, double seed_rate) {
            object[] results = this.Invoke("XIRR", new object[] {
                        present_value,
                        cash_flow_list,
                        start_date_YYYYMMDD,
                        end_date_YYYYMMDD,
                        interest_year_calc,
                        interest_year_applied,
                        beg_or_ending_period,
                        seed_rate});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void XIRRAsync(double present_value, string cash_flow_list, string start_date_YYYYMMDD, string end_date_YYYYMMDD, string interest_year_calc, string interest_year_applied, string beg_or_ending_period, double seed_rate) {
            this.XIRRAsync(present_value, cash_flow_list, start_date_YYYYMMDD, end_date_YYYYMMDD, interest_year_calc, interest_year_applied, beg_or_ending_period, seed_rate, null);
        }
        
        /// <remarks/>
        public void XIRRAsync(double present_value, string cash_flow_list, string start_date_YYYYMMDD, string end_date_YYYYMMDD, string interest_year_calc, string interest_year_applied, string beg_or_ending_period, double seed_rate, object userState) {
            if ((this.XIRROperationCompleted == null)) {
                this.XIRROperationCompleted = new System.Threading.SendOrPostCallback(this.OnXIRROperationCompleted);
            }
            this.InvokeAsync("XIRR", new object[] {
                        present_value,
                        cash_flow_list,
                        start_date_YYYYMMDD,
                        end_date_YYYYMMDD,
                        interest_year_calc,
                        interest_year_applied,
                        beg_or_ending_period,
                        seed_rate}, this.XIRROperationCompleted, userState);
        }
        
        private void OnXIRROperationCompleted(object arg) {
            if ((this.XIRRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XIRRCompleted(this, new XIRRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/CalculateAmortizedPaymentAmount", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateAmortizedPaymentAmount(double LoanAmount, double InterestRate, int NumberOfPayments, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag) {
            object[] results = this.Invoke("CalculateAmortizedPaymentAmount", new object[] {
                        LoanAmount,
                        InterestRate,
                        NumberOfPayments,
                        PaymentsPerYear,
                        BeginningPeriodAmortizationFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateAmortizedPaymentAmountAsync(double LoanAmount, double InterestRate, int NumberOfPayments, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag) {
            this.CalculateAmortizedPaymentAmountAsync(LoanAmount, InterestRate, NumberOfPayments, PaymentsPerYear, BeginningPeriodAmortizationFlag, null);
        }
        
        /// <remarks/>
        public void CalculateAmortizedPaymentAmountAsync(double LoanAmount, double InterestRate, int NumberOfPayments, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag, object userState) {
            if ((this.CalculateAmortizedPaymentAmountOperationCompleted == null)) {
                this.CalculateAmortizedPaymentAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateAmortizedPaymentAmountOperationCompleted);
            }
            this.InvokeAsync("CalculateAmortizedPaymentAmount", new object[] {
                        LoanAmount,
                        InterestRate,
                        NumberOfPayments,
                        PaymentsPerYear,
                        BeginningPeriodAmortizationFlag}, this.CalculateAmortizedPaymentAmountOperationCompleted, userState);
        }
        
        private void OnCalculateAmortizedPaymentAmountOperationCompleted(object arg) {
            if ((this.CalculateAmortizedPaymentAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateAmortizedPaymentAmountCompleted(this, new CalculateAmortizedPaymentAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/CalculateAmortizedPaymentAmountWithBalloon", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateAmortizedPaymentAmountWithBalloon(double LoanAmount, double InterestRate, int NumberOfPayments, int NumberOfPaymentsDue, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag, out double working_balloon_payment) {
            object[] results = this.Invoke("CalculateAmortizedPaymentAmountWithBalloon", new object[] {
                        LoanAmount,
                        InterestRate,
                        NumberOfPayments,
                        NumberOfPaymentsDue,
                        PaymentsPerYear,
                        BeginningPeriodAmortizationFlag});
            working_balloon_payment = ((double)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateAmortizedPaymentAmountWithBalloonAsync(double LoanAmount, double InterestRate, int NumberOfPayments, int NumberOfPaymentsDue, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag) {
            this.CalculateAmortizedPaymentAmountWithBalloonAsync(LoanAmount, InterestRate, NumberOfPayments, NumberOfPaymentsDue, PaymentsPerYear, BeginningPeriodAmortizationFlag, null);
        }
        
        /// <remarks/>
        public void CalculateAmortizedPaymentAmountWithBalloonAsync(double LoanAmount, double InterestRate, int NumberOfPayments, int NumberOfPaymentsDue, int PaymentsPerYear, bool BeginningPeriodAmortizationFlag, object userState) {
            if ((this.CalculateAmortizedPaymentAmountWithBalloonOperationCompleted == null)) {
                this.CalculateAmortizedPaymentAmountWithBalloonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateAmortizedPaymentAmountWithBalloonOperationCompleted);
            }
            this.InvokeAsync("CalculateAmortizedPaymentAmountWithBalloon", new object[] {
                        LoanAmount,
                        InterestRate,
                        NumberOfPayments,
                        NumberOfPaymentsDue,
                        PaymentsPerYear,
                        BeginningPeriodAmortizationFlag}, this.CalculateAmortizedPaymentAmountWithBalloonOperationCompleted, userState);
        }
        
        private void OnCalculateAmortizedPaymentAmountWithBalloonOperationCompleted(object arg) {
            if ((this.CalculateAmortizedPaymentAmountWithBalloonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateAmortizedPaymentAmountWithBalloonCompleted(this, new CalculateAmortizedPaymentAmountWithBalloonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/GenerateDocument", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateDocument(string server_name, string database_name, string db_type, string document_template_name, int refno, string fields_to_replace_xml, int save_to_comment_documents, string comment_folder_location, string temporary_file_location, int save_to_document_queue) {
            object[] results = this.Invoke("GenerateDocument", new object[] {
                        server_name,
                        database_name,
                        db_type,
                        document_template_name,
                        refno,
                        fields_to_replace_xml,
                        save_to_comment_documents,
                        comment_folder_location,
                        temporary_file_location,
                        save_to_document_queue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentAsync(string server_name, string database_name, string db_type, string document_template_name, int refno, string fields_to_replace_xml, int save_to_comment_documents, string comment_folder_location, string temporary_file_location, int save_to_document_queue) {
            this.GenerateDocumentAsync(server_name, database_name, db_type, document_template_name, refno, fields_to_replace_xml, save_to_comment_documents, comment_folder_location, temporary_file_location, save_to_document_queue, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentAsync(string server_name, string database_name, string db_type, string document_template_name, int refno, string fields_to_replace_xml, int save_to_comment_documents, string comment_folder_location, string temporary_file_location, int save_to_document_queue, object userState) {
            if ((this.GenerateDocumentOperationCompleted == null)) {
                this.GenerateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentOperationCompleted);
            }
            this.InvokeAsync("GenerateDocument", new object[] {
                        server_name,
                        database_name,
                        db_type,
                        document_template_name,
                        refno,
                        fields_to_replace_xml,
                        save_to_comment_documents,
                        comment_folder_location,
                        temporary_file_location,
                        save_to_document_queue}, this.GenerateDocumentOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentOperationCompleted(object arg) {
            if ((this.GenerateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentCompleted(this, new GenerateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/SetWorkFlowResult", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetWorkFlowResult(string server_name, string database_name, string db_type, int TaskRefno, string action, string result, int CompletedByUID) {
            object[] results = this.Invoke("SetWorkFlowResult", new object[] {
                        server_name,
                        database_name,
                        db_type,
                        TaskRefno,
                        action,
                        result,
                        CompletedByUID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetWorkFlowResultAsync(string server_name, string database_name, string db_type, int TaskRefno, string action, string result, int CompletedByUID) {
            this.SetWorkFlowResultAsync(server_name, database_name, db_type, TaskRefno, action, result, CompletedByUID, null);
        }
        
        /// <remarks/>
        public void SetWorkFlowResultAsync(string server_name, string database_name, string db_type, int TaskRefno, string action, string result, int CompletedByUID, object userState) {
            if ((this.SetWorkFlowResultOperationCompleted == null)) {
                this.SetWorkFlowResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkFlowResultOperationCompleted);
            }
            this.InvokeAsync("SetWorkFlowResult", new object[] {
                        server_name,
                        database_name,
                        db_type,
                        TaskRefno,
                        action,
                        result,
                        CompletedByUID}, this.SetWorkFlowResultOperationCompleted, userState);
        }
        
        private void OnSetWorkFlowResultOperationCompleted(object arg) {
            if ((this.SetWorkFlowResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkFlowResultCompleted(this, new SetWorkFlowResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/RenewToken", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RenewToken(string token) {
            object[] results = this.Invoke("RenewToken", new object[] {
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RenewTokenAsync(string token) {
            this.RenewTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void RenewTokenAsync(string token, object userState) {
            if ((this.RenewTokenOperationCompleted == null)) {
                this.RenewTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenewTokenOperationCompleted);
            }
            this.InvokeAsync("RenewToken", new object[] {
                        token}, this.RenewTokenOperationCompleted, userState);
        }
        
        private void OnRenewTokenOperationCompleted(object arg) {
            if ((this.RenewTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenewTokenCompleted(this, new RenewTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/IsWebPayActive", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsWebPayActive(string token, string loan_number) {
            object[] results = this.Invoke("IsWebPayActive", new object[] {
                        token,
                        loan_number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsWebPayActiveAsync(string token, string loan_number) {
            this.IsWebPayActiveAsync(token, loan_number, null);
        }
        
        /// <remarks/>
        public void IsWebPayActiveAsync(string token, string loan_number, object userState) {
            if ((this.IsWebPayActiveOperationCompleted == null)) {
                this.IsWebPayActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWebPayActiveOperationCompleted);
            }
            this.InvokeAsync("IsWebPayActive", new object[] {
                        token,
                        loan_number}, this.IsWebPayActiveOperationCompleted, userState);
        }
        
        private void OnIsWebPayActiveOperationCompleted(object arg) {
            if ((this.IsWebPayActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWebPayActiveCompleted(this, new IsWebPayActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/GetWebPayURL", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPayURL(string token, string loan_number) {
            object[] results = this.Invoke("GetWebPayURL", new object[] {
                        token,
                        loan_number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPayURLAsync(string token, string loan_number) {
            this.GetWebPayURLAsync(token, loan_number, null);
        }
        
        /// <remarks/>
        public void GetWebPayURLAsync(string token, string loan_number, object userState) {
            if ((this.GetWebPayURLOperationCompleted == null)) {
                this.GetWebPayURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPayURLOperationCompleted);
            }
            this.InvokeAsync("GetWebPayURL", new object[] {
                        token,
                        loan_number}, this.GetWebPayURLOperationCompleted, userState);
        }
        
        private void OnGetWebPayURLOperationCompleted(object arg) {
            if ((this.GetWebPayURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPayURLCompleted(this, new GetWebPayURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/PostWebPay", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostWebPay(string token, string account_id, string sub_id, string loan_number_encrypted, double payment_amount, string status, int transaction_id, int order_id, string confirmation_data) {
            object[] results = this.Invoke("PostWebPay", new object[] {
                        token,
                        account_id,
                        sub_id,
                        loan_number_encrypted,
                        payment_amount,
                        status,
                        transaction_id,
                        order_id,
                        confirmation_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostWebPayAsync(string token, string account_id, string sub_id, string loan_number_encrypted, double payment_amount, string status, int transaction_id, int order_id, string confirmation_data) {
            this.PostWebPayAsync(token, account_id, sub_id, loan_number_encrypted, payment_amount, status, transaction_id, order_id, confirmation_data, null);
        }
        
        /// <remarks/>
        public void PostWebPayAsync(string token, string account_id, string sub_id, string loan_number_encrypted, double payment_amount, string status, int transaction_id, int order_id, string confirmation_data, object userState) {
            if ((this.PostWebPayOperationCompleted == null)) {
                this.PostWebPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostWebPayOperationCompleted);
            }
            this.InvokeAsync("PostWebPay", new object[] {
                        token,
                        account_id,
                        sub_id,
                        loan_number_encrypted,
                        payment_amount,
                        status,
                        transaction_id,
                        order_id,
                        confirmation_data}, this.PostWebPayOperationCompleted, userState);
        }
        
        private void OnPostWebPayOperationCompleted(object arg) {
            if ((this.PostWebPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostWebPayCompleted(this, new PostWebPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSDealerTrackApp", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSDealerTrackApp(string XML) {
            object[] results = this.Invoke("NLSDealerTrackApp", new object[] {
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSDealerTrackAppAsync(string XML) {
            this.NLSDealerTrackAppAsync(XML, null);
        }
        
        /// <remarks/>
        public void NLSDealerTrackAppAsync(string XML, object userState) {
            if ((this.NLSDealerTrackAppOperationCompleted == null)) {
                this.NLSDealerTrackAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSDealerTrackAppOperationCompleted);
            }
            this.InvokeAsync("NLSDealerTrackApp", new object[] {
                        XML}, this.NLSDealerTrackAppOperationCompleted, userState);
        }
        
        private void OnNLSDealerTrackAppOperationCompleted(object arg) {
            if ((this.NLSDealerTrackAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSDealerTrackAppCompleted(this, new NLSDealerTrackAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/GetNLSWebServiceVersion", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNLSWebServiceVersion() {
            object[] results = this.Invoke("GetNLSWebServiceVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNLSWebServiceVersionAsync() {
            this.GetNLSWebServiceVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetNLSWebServiceVersionAsync(object userState) {
            if ((this.GetNLSWebServiceVersionOperationCompleted == null)) {
                this.GetNLSWebServiceVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNLSWebServiceVersionOperationCompleted);
            }
            this.InvokeAsync("GetNLSWebServiceVersion", new object[0], this.GetNLSWebServiceVersionOperationCompleted, userState);
        }
        
        private void OnGetNLSWebServiceVersionOperationCompleted(object arg) {
            if ((this.GetNLSWebServiceVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNLSWebServiceVersionCompleted(this, new GetNLSWebServiceVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/IsDateHoliday", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDateHoliday(string SourceDate, int HolidaySchedule) {
            object[] results = this.Invoke("IsDateHoliday", new object[] {
                        SourceDate,
                        HolidaySchedule});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDateHolidayAsync(string SourceDate, int HolidaySchedule) {
            this.IsDateHolidayAsync(SourceDate, HolidaySchedule, null);
        }
        
        /// <remarks/>
        public void IsDateHolidayAsync(string SourceDate, int HolidaySchedule, object userState) {
            if ((this.IsDateHolidayOperationCompleted == null)) {
                this.IsDateHolidayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDateHolidayOperationCompleted);
            }
            this.InvokeAsync("IsDateHoliday", new object[] {
                        SourceDate,
                        HolidaySchedule}, this.IsDateHolidayOperationCompleted, userState);
        }
        
        private void OnIsDateHolidayOperationCompleted(object arg) {
            if ((this.IsDateHolidayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDateHolidayCompleted(this, new IsDateHolidayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/AdvancePeriod", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdvancePeriod(string SourceDate, string Period, int DayValue) {
            object[] results = this.Invoke("AdvancePeriod", new object[] {
                        SourceDate,
                        Period,
                        DayValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdvancePeriodAsync(string SourceDate, string Period, int DayValue) {
            this.AdvancePeriodAsync(SourceDate, Period, DayValue, null);
        }
        
        /// <remarks/>
        public void AdvancePeriodAsync(string SourceDate, string Period, int DayValue, object userState) {
            if ((this.AdvancePeriodOperationCompleted == null)) {
                this.AdvancePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvancePeriodOperationCompleted);
            }
            this.InvokeAsync("AdvancePeriod", new object[] {
                        SourceDate,
                        Period,
                        DayValue}, this.AdvancePeriodOperationCompleted, userState);
        }
        
        private void OnAdvancePeriodOperationCompleted(object arg) {
            if ((this.AdvancePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvancePeriodCompleted(this, new AdvancePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/GetMaturityDate", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaturityDate(int Term, string TermSpecifier, string Period, string OriginationDate, string FirstPrincipalPaymentDate, int FirstPrincipalPaymentDateDayValue, string FirstInterestPaymentDate, int FirstInterestPaymentDateDayValue, int PaymentOptionFlags) {
            object[] results = this.Invoke("GetMaturityDate", new object[] {
                        Term,
                        TermSpecifier,
                        Period,
                        OriginationDate,
                        FirstPrincipalPaymentDate,
                        FirstPrincipalPaymentDateDayValue,
                        FirstInterestPaymentDate,
                        FirstInterestPaymentDateDayValue,
                        PaymentOptionFlags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaturityDateAsync(int Term, string TermSpecifier, string Period, string OriginationDate, string FirstPrincipalPaymentDate, int FirstPrincipalPaymentDateDayValue, string FirstInterestPaymentDate, int FirstInterestPaymentDateDayValue, int PaymentOptionFlags) {
            this.GetMaturityDateAsync(Term, TermSpecifier, Period, OriginationDate, FirstPrincipalPaymentDate, FirstPrincipalPaymentDateDayValue, FirstInterestPaymentDate, FirstInterestPaymentDateDayValue, PaymentOptionFlags, null);
        }
        
        /// <remarks/>
        public void GetMaturityDateAsync(int Term, string TermSpecifier, string Period, string OriginationDate, string FirstPrincipalPaymentDate, int FirstPrincipalPaymentDateDayValue, string FirstInterestPaymentDate, int FirstInterestPaymentDateDayValue, int PaymentOptionFlags, object userState) {
            if ((this.GetMaturityDateOperationCompleted == null)) {
                this.GetMaturityDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaturityDateOperationCompleted);
            }
            this.InvokeAsync("GetMaturityDate", new object[] {
                        Term,
                        TermSpecifier,
                        Period,
                        OriginationDate,
                        FirstPrincipalPaymentDate,
                        FirstPrincipalPaymentDateDayValue,
                        FirstInterestPaymentDate,
                        FirstInterestPaymentDateDayValue,
                        PaymentOptionFlags}, this.GetMaturityDateOperationCompleted, userState);
        }
        
        private void OnGetMaturityDateOperationCompleted(object arg) {
            if ((this.GetMaturityDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaturityDateCompleted(this, new GetMaturityDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/CreateAmortization", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateAmortization(string DBType, string DBServer, string DBName, string XML) {
            object[] results = this.Invoke("CreateAmortization", new object[] {
                        DBType,
                        DBServer,
                        DBName,
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAmortizationAsync(string DBType, string DBServer, string DBName, string XML) {
            this.CreateAmortizationAsync(DBType, DBServer, DBName, XML, null);
        }
        
        /// <remarks/>
        public void CreateAmortizationAsync(string DBType, string DBServer, string DBName, string XML, object userState) {
            if ((this.CreateAmortizationOperationCompleted == null)) {
                this.CreateAmortizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAmortizationOperationCompleted);
            }
            this.InvokeAsync("CreateAmortization", new object[] {
                        DBType,
                        DBServer,
                        DBName,
                        XML}, this.CreateAmortizationOperationCompleted, userState);
        }
        
        private void OnCreateAmortizationOperationCompleted(object arg) {
            if ((this.CreateAmortizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAmortizationCompleted(this, new CreateAmortizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/APRUsingCashFlow", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double APRUsingCashFlow(string OriginationDate, double LoanAmount, string CashFlow) {
            object[] results = this.Invoke("APRUsingCashFlow", new object[] {
                        OriginationDate,
                        LoanAmount,
                        CashFlow});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void APRUsingCashFlowAsync(string OriginationDate, double LoanAmount, string CashFlow) {
            this.APRUsingCashFlowAsync(OriginationDate, LoanAmount, CashFlow, null);
        }
        
        /// <remarks/>
        public void APRUsingCashFlowAsync(string OriginationDate, double LoanAmount, string CashFlow, object userState) {
            if ((this.APRUsingCashFlowOperationCompleted == null)) {
                this.APRUsingCashFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPRUsingCashFlowOperationCompleted);
            }
            this.InvokeAsync("APRUsingCashFlow", new object[] {
                        OriginationDate,
                        LoanAmount,
                        CashFlow}, this.APRUsingCashFlowOperationCompleted, userState);
        }
        
        private void OnAPRUsingCashFlowOperationCompleted(object arg) {
            if ((this.APRUsingCashFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APRUsingCashFlowCompleted(this, new APRUsingCashFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSMethod", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NLSMethod(string input_xml, out string output_xml) {
            object[] results = this.Invoke("NLSMethod", new object[] {
                        input_xml});
            output_xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NLSMethodAsync(string input_xml) {
            this.NLSMethodAsync(input_xml, null);
        }
        
        /// <remarks/>
        public void NLSMethodAsync(string input_xml, object userState) {
            if ((this.NLSMethodOperationCompleted == null)) {
                this.NLSMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSMethodOperationCompleted);
            }
            this.InvokeAsync("NLSMethod", new object[] {
                        input_xml}, this.NLSMethodOperationCompleted, userState);
        }
        
        private void OnNLSMethodOperationCompleted(object arg) {
            if ((this.NLSMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSMethodCompleted(this, new NLSMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/CalculateLoanAmortizationSchedule", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateLoanAmortizationSchedule(string server_name, string database_name, int acctrefno, string run_thru_date_str) {
            object[] results = this.Invoke("CalculateLoanAmortizationSchedule", new object[] {
                        server_name,
                        database_name,
                        acctrefno,
                        run_thru_date_str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateLoanAmortizationScheduleAsync(string server_name, string database_name, int acctrefno, string run_thru_date_str) {
            this.CalculateLoanAmortizationScheduleAsync(server_name, database_name, acctrefno, run_thru_date_str, null);
        }
        
        /// <remarks/>
        public void CalculateLoanAmortizationScheduleAsync(string server_name, string database_name, int acctrefno, string run_thru_date_str, object userState) {
            if ((this.CalculateLoanAmortizationScheduleOperationCompleted == null)) {
                this.CalculateLoanAmortizationScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateLoanAmortizationScheduleOperationCompleted);
            }
            this.InvokeAsync("CalculateLoanAmortizationSchedule", new object[] {
                        server_name,
                        database_name,
                        acctrefno,
                        run_thru_date_str}, this.CalculateLoanAmortizationScheduleOperationCompleted, userState);
        }
        
        private void OnCalculateLoanAmortizationScheduleOperationCompleted(object arg) {
            if ((this.CalculateLoanAmortizationScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateLoanAmortizationScheduleCompleted(this, new CalculateLoanAmortizationScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXML", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportXML(string ServerName, string DatabaseName, string ImportString, out string ErrorMessage) {
            object[] results = this.Invoke("ImportXML", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString});
            ErrorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXMLAsync(string ServerName, string DatabaseName, string ImportString) {
            this.ImportXMLAsync(ServerName, DatabaseName, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXMLAsync(string ServerName, string DatabaseName, string ImportString, object userState) {
            if ((this.ImportXMLOperationCompleted == null)) {
                this.ImportXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXMLOperationCompleted);
            }
            this.InvokeAsync("ImportXML", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString}, this.ImportXMLOperationCompleted, userState);
        }
        
        private void OnImportXMLOperationCompleted(object arg) {
            if ((this.ImportXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXMLCompleted(this, new ImportXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXML2", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportXML2(string ServerName, string DatabaseName, string ImportString) {
            object[] results = this.Invoke("ImportXML2", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXML2Async(string ServerName, string DatabaseName, string ImportString) {
            this.ImportXML2Async(ServerName, DatabaseName, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXML2Async(string ServerName, string DatabaseName, string ImportString, object userState) {
            if ((this.ImportXML2OperationCompleted == null)) {
                this.ImportXML2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXML2OperationCompleted);
            }
            this.InvokeAsync("ImportXML2", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString}, this.ImportXML2OperationCompleted, userState);
        }
        
        private void OnImportXML2OperationCompleted(object arg) {
            if ((this.ImportXML2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXML2Completed(this, new ImportXML2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXMLUsingDBAuthentication", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportXMLUsingDBAuthentication(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString, out string ErrorMessage) {
            object[] results = this.Invoke("ImportXMLUsingDBAuthentication", new object[] {
                        ServerName,
                        DatabaseName,
                        db_username,
                        db_password,
                        nls_username,
                        nls_password,
                        ImportString});
            ErrorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXMLUsingDBAuthenticationAsync(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString) {
            this.ImportXMLUsingDBAuthenticationAsync(ServerName, DatabaseName, db_username, db_password, nls_username, nls_password, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXMLUsingDBAuthenticationAsync(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString, object userState) {
            if ((this.ImportXMLUsingDBAuthenticationOperationCompleted == null)) {
                this.ImportXMLUsingDBAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXMLUsingDBAuthenticationOperationCompleted);
            }
            this.InvokeAsync("ImportXMLUsingDBAuthentication", new object[] {
                        ServerName,
                        DatabaseName,
                        db_username,
                        db_password,
                        nls_username,
                        nls_password,
                        ImportString}, this.ImportXMLUsingDBAuthenticationOperationCompleted, userState);
        }
        
        private void OnImportXMLUsingDBAuthenticationOperationCompleted(object arg) {
            if ((this.ImportXMLUsingDBAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXMLUsingDBAuthenticationCompleted(this, new ImportXMLUsingDBAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXMLUsingDBAuthentication2", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportXMLUsingDBAuthentication2(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString) {
            object[] results = this.Invoke("ImportXMLUsingDBAuthentication2", new object[] {
                        ServerName,
                        DatabaseName,
                        db_username,
                        db_password,
                        nls_username,
                        nls_password,
                        ImportString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXMLUsingDBAuthentication2Async(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString) {
            this.ImportXMLUsingDBAuthentication2Async(ServerName, DatabaseName, db_username, db_password, nls_username, nls_password, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXMLUsingDBAuthentication2Async(string ServerName, string DatabaseName, string db_username, string db_password, string nls_username, string nls_password, string ImportString, object userState) {
            if ((this.ImportXMLUsingDBAuthentication2OperationCompleted == null)) {
                this.ImportXMLUsingDBAuthentication2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXMLUsingDBAuthentication2OperationCompleted);
            }
            this.InvokeAsync("ImportXMLUsingDBAuthentication2", new object[] {
                        ServerName,
                        DatabaseName,
                        db_username,
                        db_password,
                        nls_username,
                        nls_password,
                        ImportString}, this.ImportXMLUsingDBAuthentication2OperationCompleted, userState);
        }
        
        private void OnImportXMLUsingDBAuthentication2OperationCompleted(object arg) {
            if ((this.ImportXMLUsingDBAuthentication2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXMLUsingDBAuthentication2Completed(this, new ImportXMLUsingDBAuthentication2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXMLTest", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportXMLTest(string ServerName, string DatabaseName, string ImportString, out string ErrorMessage) {
            object[] results = this.Invoke("ImportXMLTest", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString});
            ErrorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXMLTestAsync(string ServerName, string DatabaseName, string ImportString) {
            this.ImportXMLTestAsync(ServerName, DatabaseName, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXMLTestAsync(string ServerName, string DatabaseName, string ImportString, object userState) {
            if ((this.ImportXMLTestOperationCompleted == null)) {
                this.ImportXMLTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXMLTestOperationCompleted);
            }
            this.InvokeAsync("ImportXMLTest", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString}, this.ImportXMLTestOperationCompleted, userState);
        }
        
        private void OnImportXMLTestOperationCompleted(object arg) {
            if ((this.ImportXMLTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXMLTestCompleted(this, new ImportXMLTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/ImportXMLTest2", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportXMLTest2(string ServerName, string DatabaseName, string ImportString) {
            object[] results = this.Invoke("ImportXMLTest2", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportXMLTest2Async(string ServerName, string DatabaseName, string ImportString) {
            this.ImportXMLTest2Async(ServerName, DatabaseName, ImportString, null);
        }
        
        /// <remarks/>
        public void ImportXMLTest2Async(string ServerName, string DatabaseName, string ImportString, object userState) {
            if ((this.ImportXMLTest2OperationCompleted == null)) {
                this.ImportXMLTest2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportXMLTest2OperationCompleted);
            }
            this.InvokeAsync("ImportXMLTest2", new object[] {
                        ServerName,
                        DatabaseName,
                        ImportString}, this.ImportXMLTest2OperationCompleted, userState);
        }
        
        private void OnImportXMLTest2OperationCompleted(object arg) {
            if ((this.ImportXMLTest2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportXMLTest2Completed(this, new ImportXMLTest2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nortridge.com/NLSAuthenticate", RequestNamespace="http://nortridge.com/", ResponseNamespace="http://nortridge.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NLSAuthenticate(string db_type, string server_name, string database_name, string username, string password, string ipaddress) {
            object[] results = this.Invoke("NLSAuthenticate", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        username,
                        password,
                        ipaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NLSAuthenticateAsync(string db_type, string server_name, string database_name, string username, string password, string ipaddress) {
            this.NLSAuthenticateAsync(db_type, server_name, database_name, username, password, ipaddress, null);
        }
        
        /// <remarks/>
        public void NLSAuthenticateAsync(string db_type, string server_name, string database_name, string username, string password, string ipaddress, object userState) {
            if ((this.NLSAuthenticateOperationCompleted == null)) {
                this.NLSAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNLSAuthenticateOperationCompleted);
            }
            this.InvokeAsync("NLSAuthenticate", new object[] {
                        db_type,
                        server_name,
                        database_name,
                        username,
                        password,
                        ipaddress}, this.NLSAuthenticateOperationCompleted, userState);
        }
        
        private void OnNLSAuthenticateOperationCompleted(object arg) {
            if ((this.NLSAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NLSAuthenticateCompleted(this, new NLSAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSAuthenticateByContactTypeCompletedEventHandler(object sender, NLSAuthenticateByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSAuthenticateByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSAuthenticateByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGlobalAuthenticationCompletedEventHandler(object sender, NLSGlobalAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGlobalAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGlobalAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetLoanListCompletedEventHandler(object sender, NLSGetLoanListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetLoanListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetLoanListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetLoanDetailCompletedEventHandler(object sender, NLSGetLoanDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetLoanDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetLoanDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetLoanCreditLinesCompletedEventHandler(object sender, NLSGetLoanCreditLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetLoanCreditLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetLoanCreditLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetContactCompletedEventHandler(object sender, NLSGetContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSStatementImageCompletedEventHandler(object sender, NLSStatementImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSStatementImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSStatementImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSStatementImageBase64CompletedEventHandler(object sender, NLSStatementImageBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSStatementImageBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSStatementImageBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSLoanPendingTransactionsCompletedEventHandler(object sender, NLSLoanPendingTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSLoanPendingTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSLoanPendingTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSLogOutCompletedEventHandler(object sender, NLSLogOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSLogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSLogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSVerifyContactCompletedEventHandler(object sender, NLSVerifyContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSVerifyContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSVerifyContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSCreateCredentialsCompletedEventHandler(object sender, NLSCreateCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSCreateCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSCreateCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSCreateCredentialsByContactTypeCompletedEventHandler(object sender, NLSCreateCredentialsByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSCreateCredentialsByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSCreateCredentialsByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryByEmailCompletedEventHandler(object sender, NLSPasswordRecoveryByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryByEmailByContactTypeCompletedEventHandler(object sender, NLSPasswordRecoveryByEmailByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryByEmailByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryByEmailByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryHintsCompletedEventHandler(object sender, NLSPasswordRecoveryHintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryHintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryHintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryHintsByContactTypeCompletedEventHandler(object sender, NLSPasswordRecoveryHintsByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryHintsByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryHintsByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryAnswersCompletedEventHandler(object sender, NLSPasswordRecoveryAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSPasswordRecoveryAnswersByContactTypeCompletedEventHandler(object sender, NLSPasswordRecoveryAnswersByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSPasswordRecoveryAnswersByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSPasswordRecoveryAnswersByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSChangePasswordCompletedEventHandler(object sender, NLSChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSForceChangePasswordCompletedEventHandler(object sender, NLSForceChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSForceChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSForceChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetContactTaskListCompletedEventHandler(object sender, NLSGetContactTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetContactTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetContactTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetContactTaskRelationshipsListCompletedEventHandler(object sender, NLSGetContactTaskRelationshipsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetContactTaskRelationshipsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetContactTaskRelationshipsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetTaskDetailCompletedEventHandler(object sender, NLSGetTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSContactUDFCompletedEventHandler(object sender, NLSContactUDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSContactUDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSContactUDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSLoanDetailUDFCompletedEventHandler(object sender, NLSLoanDetailUDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSLoanDetailUDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSLoanDetailUDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSLoanPaymentsDueCompletedEventHandler(object sender, NLSLoanPaymentsDueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSLoanPaymentsDueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSLoanPaymentsDueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSLoanPaymentHistoryCompletedEventHandler(object sender, NLSLoanPaymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSLoanPaymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSLoanPaymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSStatementsCompletedEventHandler(object sender, NLSStatementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSStatementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSStatementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetLoanStatusesCompletedEventHandler(object sender, NLSGetLoanStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetLoanStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetLoanStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVendorAcctListCompletedEventHandler(object sender, NLSGetVendorAcctListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVendorAcctListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVendorAcctListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVendorAcctDetailCompletedEventHandler(object sender, NLSGetVendorAcctDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVendorAcctDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVendorAcctDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVoucherListCompletedEventHandler(object sender, NLSGetVoucherListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVoucherListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVoucherListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetStipulationListByContactCompletedEventHandler(object sender, NLSGetStipulationListByContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetStipulationListByContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetStipulationListByContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetStipulationListByTaskCompletedEventHandler(object sender, NLSGetStipulationListByTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetStipulationListByTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetStipulationListByTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVerificationListByContactCompletedEventHandler(object sender, NLSGetVerificationListByContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVerificationListByContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVerificationListByContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVerificationListByTaskCompletedEventHandler(object sender, NLSGetVerificationListByTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVerificationListByTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVerificationListByTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetTaskUDFCompletedEventHandler(object sender, NLSGetTaskUDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetTaskUDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetTaskUDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSGetVoucherListByStatusCompletedEventHandler(object sender, NLSGetVoucherListByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSGetVoucherListByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSGetVoucherListByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void APRCompletedEventHandler(object sender, APRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void APRIrregularLastPaymentCompletedEventHandler(object sender, APRIrregularLastPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APRIrregularLastPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APRIrregularLastPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CalculateActualIntYearAmortizedPaymentCompletedEventHandler(object sender, CalculateActualIntYearAmortizedPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateActualIntYearAmortizedPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateActualIntYearAmortizedPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void IRRCompletedEventHandler(object sender, IRRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IRRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IRRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NPVCompletedEventHandler(object sender, NPVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NPVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NPVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SendEmailMessageCompletedEventHandler(object sender, SendEmailMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void XIRRCompletedEventHandler(object sender, XIRRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XIRRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XIRRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CalculateAmortizedPaymentAmountCompletedEventHandler(object sender, CalculateAmortizedPaymentAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateAmortizedPaymentAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateAmortizedPaymentAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CalculateAmortizedPaymentAmountWithBalloonCompletedEventHandler(object sender, CalculateAmortizedPaymentAmountWithBalloonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateAmortizedPaymentAmountWithBalloonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateAmortizedPaymentAmountWithBalloonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double working_balloon_payment {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GenerateDocumentCompletedEventHandler(object sender, GenerateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SetWorkFlowResultCompletedEventHandler(object sender, SetWorkFlowResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWorkFlowResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWorkFlowResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void RenewTokenCompletedEventHandler(object sender, RenewTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenewTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenewTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void IsWebPayActiveCompletedEventHandler(object sender, IsWebPayActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWebPayActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWebPayActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetWebPayURLCompletedEventHandler(object sender, GetWebPayURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPayURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPayURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void PostWebPayCompletedEventHandler(object sender, PostWebPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostWebPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostWebPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSDealerTrackAppCompletedEventHandler(object sender, NLSDealerTrackAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSDealerTrackAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSDealerTrackAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetNLSWebServiceVersionCompletedEventHandler(object sender, GetNLSWebServiceVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNLSWebServiceVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNLSWebServiceVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void IsDateHolidayCompletedEventHandler(object sender, IsDateHolidayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDateHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDateHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void AdvancePeriodCompletedEventHandler(object sender, AdvancePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvancePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdvancePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetMaturityDateCompletedEventHandler(object sender, GetMaturityDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaturityDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaturityDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CreateAmortizationCompletedEventHandler(object sender, CreateAmortizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAmortizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAmortizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void APRUsingCashFlowCompletedEventHandler(object sender, APRUsingCashFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APRUsingCashFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APRUsingCashFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSMethodCompletedEventHandler(object sender, NLSMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string output_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CalculateLoanAmortizationScheduleCompletedEventHandler(object sender, CalculateLoanAmortizationScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateLoanAmortizationScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateLoanAmortizationScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXMLCompletedEventHandler(object sender, ImportXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXML2CompletedEventHandler(object sender, ImportXML2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXML2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXML2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXMLUsingDBAuthenticationCompletedEventHandler(object sender, ImportXMLUsingDBAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXMLUsingDBAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXMLUsingDBAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXMLUsingDBAuthentication2CompletedEventHandler(object sender, ImportXMLUsingDBAuthentication2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXMLUsingDBAuthentication2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXMLUsingDBAuthentication2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXMLTestCompletedEventHandler(object sender, ImportXMLTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXMLTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXMLTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ImportXMLTest2CompletedEventHandler(object sender, ImportXMLTest2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportXMLTest2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportXMLTest2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void NLSAuthenticateCompletedEventHandler(object sender, NLSAuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NLSAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NLSAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591